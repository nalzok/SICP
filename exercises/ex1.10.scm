(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1)
                 (A x (- y 1))))))

; If n = 0, (f n) = (g n) = (h n) = 0, assuming n != 0

(define (f n) (A 0 n))
; (f n) -> 2*n

(define (g n) (A 1 n))
; (g n) -> (A 1 n) -> (A 0 (A 1 (- 1 n))) -> (A 0 (A 0 ... (A 0 (A 1 1)))) -> (A 0 (A 0 ... (A 0 2))) -> 2^n

(define (h n) (A 2 n))
; (h n) -> (A 2 n) -> (A 1 (A 2 (- 1 n))) -> (A 1 (A 1 ... (A 1 (A 2 1))))
; -> (A 1 (A 1 ... (A 1 2))) -> (A 1 (A 1 ... 2^2))) -> 2^(2^(2^(...2^2)))  i.e. (h n) = 2^(h n-1)
;                                                        \     n     /
; e.g. (h 3) = (A 1 (A 1 2)) = 2^(2^2) = 16
;      (h 4) = 2^(2^(2^2)) = 65536

(define (i n) (A 3 n))
; (i n) -> (A 3 n) -> (A 2 (A 3 (- 1 n))) -> (A 2 (A 2 ... (A 2 (A 3 1))))
; -> (A 2 (A 2 ... (A 2 2))) -> (A 2 (A 2 ... 2^2))) -> 2^(2^(2^(...2^2)))
;                                                        \  (i n-1)  /
; e.g. (i 3) = (A 2 (A 2 2)) = (A 2 2^2) = (A 2 4) = 65536
